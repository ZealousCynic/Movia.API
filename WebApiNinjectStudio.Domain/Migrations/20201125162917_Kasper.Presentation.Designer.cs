// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApiNinjectStudio.Domain.Concrete;

namespace WebApiNinjectStudio.Domain.Migrations
{
    [DbContext(typeof(EFDbContext))]
    [Migration("20201125162917_Kasper.Presentation")]
    partial class KasperPresentation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApiNinjectStudio.Domain.Entities.ApiUrl", b =>
                {
                    b.Property<int>("ApiUrlID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApiRequestMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApiUrlRegex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApiUrlString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("ApiUrlID");

                    b.ToTable("ApiUrls");

                    b.HasData(
                        new
                        {
                            ApiUrlID = 1,
                            ApiRequestMethod = "Get",
                            ApiUrlString = "/api/User",
                            IsDeleted = false
                        },
                        new
                        {
                            ApiUrlID = 2,
                            ApiRequestMethod = "Get",
                            ApiUrlString = "/api/User/GetUserID",
                            IsDeleted = false
                        },
                        new
                        {
                            ApiUrlID = 3,
                            ApiRequestMethod = "Get",
                            ApiUrlString = "/api/product",
                            IsDeleted = false
                        },
                        new
                        {
                            ApiUrlID = 4,
                            ApiRequestMethod = "Post",
                            ApiUrlString = "/api/product",
                            IsDeleted = false
                        },
                        new
                        {
                            ApiUrlID = 5,
                            ApiRequestMethod = "Post",
                            ApiUrlRegex = "^\\/api\\/v1\\/categories$",
                            ApiUrlString = "/api/v1/categories",
                            Description = "Create category",
                            IsDeleted = false
                        },
                        new
                        {
                            ApiUrlID = 6,
                            ApiRequestMethod = "Get",
                            ApiUrlRegex = "^\\/api\\/v1\\/categories$",
                            ApiUrlString = "/api/v1/categories",
                            Description = "Get category list",
                            IsDeleted = false
                        },
                        new
                        {
                            ApiUrlID = 7,
                            ApiRequestMethod = "Get",
                            ApiUrlRegex = "^\\/api\\/v1\\/categories\\/\\d+$",
                            ApiUrlString = "/api/v1/categories/{categoryId}",
                            Description = "Get info about category by category id",
                            IsDeleted = false
                        },
                        new
                        {
                            ApiUrlID = 8,
                            ApiRequestMethod = "Delete",
                            ApiUrlRegex = "^\\/api\\/v1\\/categories\\/\\d+$",
                            ApiUrlString = "/api/v1/categories/{categoryId}",
                            Description = "Delete category by identifier",
                            IsDeleted = false
                        },
                        new
                        {
                            ApiUrlID = 9,
                            ApiRequestMethod = "Put",
                            ApiUrlRegex = "^\\/api\\/v1\\/categories\\/\\d+$",
                            ApiUrlString = "/api/v1/categories/{categoryId}",
                            Description = "Update category by identifier",
                            IsDeleted = false
                        },
                        new
                        {
                            ApiUrlID = 10,
                            ApiRequestMethod = "Post",
                            ApiUrlRegex = "^\\/api\\/v1\\/categories\\/\\d+\\/products$",
                            ApiUrlString = "/api/v1/categories/{categoryId}/products",
                            Description = "Assign a product to the required category",
                            IsDeleted = false
                        },
                        new
                        {
                            ApiUrlID = 11,
                            ApiRequestMethod = "Get",
                            ApiUrlRegex = "^\\/api\\/v1\\/categories\\/\\d+\\/products(\\?.*)*$",
                            ApiUrlString = "/api/v1/categories/{categoryId}/products",
                            Description = "Get products assigned to category",
                            IsDeleted = false
                        },
                        new
                        {
                            ApiUrlID = 12,
                            ApiRequestMethod = "Put",
                            ApiUrlRegex = "^\\/api\\/v1\\/categories\\/\\d+\\/products$",
                            ApiUrlString = "/api/v1/categories/{categoryId}/products",
                            Description = "Assign a product to the required category",
                            IsDeleted = false
                        },
                        new
                        {
                            ApiUrlID = 13,
                            ApiRequestMethod = "Delete",
                            ApiUrlRegex = "^\\/api\\/v1\\/categories\\/\\d+\\/products\\/\\d+$",
                            ApiUrlString = "/api/v1/categories/{categoryId}/products/{productId}",
                            Description = "Remove the product assignment from the category by category id and product id",
                            IsDeleted = false
                        },
                        new
                        {
                            ApiUrlID = 14,
                            ApiRequestMethod = "Get",
                            ApiUrlRegex = "^\\/api\\/v1\\/products(\\?.*)*$",
                            ApiUrlString = "/api/v1/products",
                            Description = "Get product list",
                            IsDeleted = false
                        },
                        new
                        {
                            ApiUrlID = 15,
                            ApiRequestMethod = "Post",
                            ApiUrlRegex = "^\\/api\\/v1\\/products$",
                            ApiUrlString = "/api/v1/products",
                            Description = "Create product",
                            IsDeleted = false
                        },
                        new
                        {
                            ApiUrlID = 16,
                            ApiRequestMethod = "Get",
                            ApiUrlRegex = "^\\/api\\/v1\\/products\\/\\d+$",
                            ApiUrlString = "/api/v1/products/{productId}",
                            Description = "Get info about product by product id",
                            IsDeleted = false
                        },
                        new
                        {
                            ApiUrlID = 17,
                            ApiRequestMethod = "Put",
                            ApiUrlRegex = "^\\/api\\/v1\\/products\\/\\d+$",
                            ApiUrlString = "/api/v1/products/{productId}",
                            Description = "Update the product by product id",
                            IsDeleted = false
                        },
                        new
                        {
                            ApiUrlID = 18,
                            ApiRequestMethod = "Delete",
                            ApiUrlRegex = "^\\/api\\/v1\\/products\\/\\d+$",
                            ApiUrlString = "/api/v1/products/{productId}",
                            Description = "Remove the product by product id",
                            IsDeleted = false
                        },
                        new
                        {
                            ApiUrlID = 19,
                            ApiRequestMethod = "Get",
                            ApiUrlRegex = "^\\/api\\/v1\\/integrations\\/customer\\/userid$",
                            ApiUrlString = "/api/v1/integrations/customer/userid",
                            Description = "Get id of current user.",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("WebApiNinjectStudio.Domain.Entities.Bus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BusModelID")
                        .HasColumnType("int");

                    b.Property<int>("CapacityBoundary")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SeatingPlace")
                        .HasColumnType("int");

                    b.Property<int>("StandingPlace")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BusModelID");

                    b.ToTable("Busses");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            BusModelID = 1,
                            CapacityBoundary = 45,
                            IsDeleted = false,
                            RegistrationNumber = "BJ32621",
                            SeatingPlace = 35,
                            StandingPlace = 40
                        },
                        new
                        {
                            ID = 2,
                            BusModelID = 1,
                            CapacityBoundary = 40,
                            IsDeleted = false,
                            RegistrationNumber = "HG30202",
                            SeatingPlace = 35,
                            StandingPlace = 35
                        },
                        new
                        {
                            ID = 3,
                            BusModelID = 2,
                            CapacityBoundary = 45,
                            IsDeleted = false,
                            RegistrationNumber = "MD21233",
                            SeatingPlace = 35,
                            StandingPlace = 45
                        },
                        new
                        {
                            ID = 4,
                            BusModelID = 2,
                            CapacityBoundary = 45,
                            IsDeleted = false,
                            RegistrationNumber = "YU57648",
                            SeatingPlace = 35,
                            StandingPlace = 45
                        },
                        new
                        {
                            ID = 5,
                            BusModelID = 3,
                            CapacityBoundary = 45,
                            IsDeleted = false,
                            RegistrationNumber = "AF22454",
                            SeatingPlace = 25,
                            StandingPlace = 60
                        },
                        new
                        {
                            ID = 6,
                            BusModelID = 3,
                            CapacityBoundary = 45,
                            IsDeleted = false,
                            RegistrationNumber = "AF33912",
                            SeatingPlace = 25,
                            StandingPlace = 60
                        },
                        new
                        {
                            ID = 7,
                            BusModelID = 3,
                            CapacityBoundary = 45,
                            IsDeleted = false,
                            RegistrationNumber = "XT33042",
                            SeatingPlace = 32,
                            StandingPlace = 40
                        },
                        new
                        {
                            ID = 8,
                            BusModelID = 4,
                            CapacityBoundary = 30,
                            IsDeleted = false,
                            RegistrationNumber = "AF25463",
                            SeatingPlace = 30,
                            StandingPlace = 45
                        },
                        new
                        {
                            ID = 9,
                            BusModelID = 5,
                            CapacityBoundary = 50,
                            IsDeleted = false,
                            RegistrationNumber = "AD32343",
                            SeatingPlace = 40,
                            StandingPlace = 50
                        },
                        new
                        {
                            ID = 10,
                            BusModelID = 5,
                            CapacityBoundary = 30,
                            IsDeleted = false,
                            RegistrationNumber = "AB11139",
                            SeatingPlace = 20,
                            StandingPlace = 60
                        },
                        new
                        {
                            ID = 11,
                            BusModelID = 6,
                            CapacityBoundary = 60,
                            IsDeleted = false,
                            RegistrationNumber = "BP54379",
                            SeatingPlace = 45,
                            StandingPlace = 40
                        },
                        new
                        {
                            ID = 12,
                            BusModelID = 6,
                            CapacityBoundary = 35,
                            IsDeleted = false,
                            RegistrationNumber = "BV28091",
                            SeatingPlace = 45,
                            StandingPlace = 30
                        });
                });

            modelBuilder.Entity("WebApiNinjectStudio.Domain.Entities.BusDriver", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonnelNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("BusDrivers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            FirstName = "Peter",
                            IsDeleted = false,
                            LastName = "Nielsen",
                            PersonnelNumber = "D-0100",
                            PhoneNumber = "41539333"
                        },
                        new
                        {
                            ID = 2,
                            FirstName = "Jens",
                            IsDeleted = false,
                            LastName = "Jensen",
                            PersonnelNumber = "D-0101",
                            PhoneNumber = "32533534"
                        },
                        new
                        {
                            ID = 3,
                            FirstName = "Michael",
                            IsDeleted = false,
                            LastName = "Hansen",
                            PersonnelNumber = "D-0102",
                            PhoneNumber = "24804732"
                        },
                        new
                        {
                            ID = 4,
                            FirstName = "Lars",
                            IsDeleted = false,
                            LastName = "Pedersen",
                            PersonnelNumber = "D-0103",
                            PhoneNumber = "85570209"
                        },
                        new
                        {
                            ID = 5,
                            FirstName = "Thomas",
                            IsDeleted = false,
                            LastName = "Andersen",
                            PersonnelNumber = "D-0104",
                            PhoneNumber = "98205272"
                        },
                        new
                        {
                            ID = 6,
                            FirstName = "Henrik",
                            IsDeleted = false,
                            LastName = "Christensen",
                            PersonnelNumber = "D-0105",
                            PhoneNumber = "87740418"
                        },
                        new
                        {
                            ID = 7,
                            FirstName = "Søren",
                            IsDeleted = false,
                            LastName = "Larsen",
                            PersonnelNumber = "D-0107",
                            PhoneNumber = "83920099"
                        },
                        new
                        {
                            ID = 8,
                            FirstName = "Christian",
                            IsDeleted = false,
                            LastName = "Sørensen",
                            PersonnelNumber = "D-0108",
                            PhoneNumber = "59771920"
                        },
                        new
                        {
                            ID = 9,
                            FirstName = "Jan",
                            IsDeleted = false,
                            LastName = "Rasmussen",
                            PersonnelNumber = "D-0109",
                            PhoneNumber = "36159850"
                        },
                        new
                        {
                            ID = 10,
                            FirstName = "Martin",
                            IsDeleted = false,
                            LastName = "Jørgensen",
                            PersonnelNumber = "D-0110",
                            PhoneNumber = "93270098"
                        },
                        new
                        {
                            ID = 11,
                            FirstName = "Niels",
                            IsDeleted = false,
                            LastName = "Petersen",
                            PersonnelNumber = "D-0111",
                            PhoneNumber = "91025134"
                        },
                        new
                        {
                            ID = 12,
                            FirstName = "Anders",
                            IsDeleted = false,
                            LastName = "Madsen",
                            PersonnelNumber = "D-0112",
                            PhoneNumber = "37882691"
                        });
                });

            modelBuilder.Entity("WebApiNinjectStudio.Domain.Entities.BusModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Height")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Length")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PowerTrain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Width")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("BusModels");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Height = "3,30 m",
                            IsDeleted = false,
                            Length = "13,7/14,7 m (lav indstigning 3 aksler)",
                            Manufacturer = "Volvo",
                            Model = "8900",
                            PowerTrain = "Volvo D8K, 6-cylindret dieselrækkemotor. 280, 320 eller 350 hk.",
                            Width = "2,55 m"
                        },
                        new
                        {
                            ID = 2,
                            Height = "3,28 m",
                            IsDeleted = false,
                            Length = "10,6/12,0 m (2 aksler)",
                            Manufacturer = "Volvo",
                            Model = "7900 HYBRID",
                            PowerTrain = "Volvo D5K 240, 4-cylindret, dieselrækkemotor, 240 hk.; Volvo I-SAM, 120 kW/800 Nm (2 aksler)",
                            Width = "2,55 m"
                        },
                        new
                        {
                            ID = 3,
                            Height = "3.30 m",
                            IsDeleted = false,
                            Length = "12 m",
                            Manufacturer = "Volvo",
                            Model = "7900 ELECTRIC",
                            PowerTrain = "High capacity Lithium-Ion battery",
                            Width = "2.55 m"
                        },
                        new
                        {
                            ID = 4,
                            Height = "3.12 m",
                            IsDeleted = false,
                            Length = "12.135 m",
                            Manufacturer = "Mercedes-Benz",
                            Model = "Citaro",
                            PowerTrain = "Mercedes-Benz OM 936 h",
                            Width = "2.55 m"
                        },
                        new
                        {
                            ID = 5,
                            Height = "3.12 m",
                            IsDeleted = false,
                            Length = "12.135 m",
                            Manufacturer = "Mercedes-Benz",
                            Model = "Citaro NGT",
                            PowerTrain = "Mercedes-Benz M 936 G",
                            Width = "2.55 m"
                        },
                        new
                        {
                            ID = 6,
                            Height = "3.4 m",
                            IsDeleted = false,
                            Length = "12.135 m",
                            Manufacturer = "Mercedes-Benz",
                            Model = "eCitaro",
                            PowerTrain = "ZF AVE 130 elmotorer",
                            Width = "2.55 m"
                        });
                });

            modelBuilder.Entity("WebApiNinjectStudio.Domain.Entities.BusStop", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("StopNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Zone")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("BusStops");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            IsDeleted = false,
                            Label = "Benløseparken Øst (Benløseparken)",
                            Latitude = 11.795572,
                            Longitude = 55.465448000000002,
                            StopNumber = "5733",
                            Zone = 0
                        },
                        new
                        {
                            ID = 2,
                            IsDeleted = false,
                            Label = "Benløseparken",
                            Latitude = 11.79177,
                            Longitude = 55.463639000000001,
                            StopNumber = "3306",
                            Zone = 0
                        },
                        new
                        {
                            ID = 3,
                            IsDeleted = false,
                            Label = "Benløse Centret (Fredensvej)",
                            Latitude = 11.789993000000001,
                            Longitude = 55.461945999999998,
                            StopNumber = "6175",
                            Zone = 0
                        },
                        new
                        {
                            ID = 4,
                            IsDeleted = false,
                            Label = "Magleagervej (Fredensvej)",
                            Latitude = 11.792797999999999,
                            Longitude = 55.460130999999997,
                            StopNumber = "4618",
                            Zone = 0
                        },
                        new
                        {
                            ID = 5,
                            IsDeleted = false,
                            Label = "Benløse Kro (Roskildevej)",
                            Latitude = 11.794427000000001,
                            Longitude = 55.458179000000001,
                            StopNumber = "8821",
                            Zone = 0
                        },
                        new
                        {
                            ID = 6,
                            IsDeleted = false,
                            Label = "Ringstedet(Nordre Ringvej)",
                            Latitude = 11.789790999999999,
                            Longitude = 55.452938000000003,
                            StopNumber = "5469",
                            Zone = 0
                        },
                        new
                        {
                            ID = 7,
                            IsDeleted = false,
                            Label = "Ringsted Sygehus (Nørregade)",
                            Latitude = 11.789141000000001,
                            Longitude = 55.449607,
                            StopNumber = "4444",
                            Zone = 0
                        },
                        new
                        {
                            ID = 8,
                            IsDeleted = false,
                            Label = "Ringsted Centret (Nørregade)",
                            Latitude = 11.788986,
                            Longitude = 55.446610999999997,
                            StopNumber = "4627",
                            Zone = 0
                        },
                        new
                        {
                            ID = 9,
                            IsDeleted = false,
                            Label = "Torvet (Nørregade)",
                            Latitude = 11.789265,
                            Longitude = 55.445296999999997,
                            StopNumber = "6402",
                            Zone = 0
                        },
                        new
                        {
                            ID = 10,
                            IsDeleted = false,
                            Label = "Hovmarksvej (Sjællandsgade)",
                            Latitude = 11.789595,
                            Longitude = 55.441873999999999,
                            StopNumber = "5766",
                            Zone = 0
                        },
                        new
                        {
                            ID = 11,
                            IsDeleted = false,
                            Label = "Ringsted St.",
                            Latitude = 11.785506,
                            Longitude = 55.438549000000002,
                            StopNumber = "4137",
                            Zone = 0
                        },
                        new
                        {
                            ID = 12,
                            IsDeleted = false,
                            Label = "Odinsvej (Næstvedvej)",
                            Latitude = 11.791536000000001,
                            Longitude = 55.436075000000002,
                            StopNumber = "6191",
                            Zone = 0
                        },
                        new
                        {
                            ID = 13,
                            IsDeleted = false,
                            Label = "Sdr. Parkvej (Søndervang)",
                            Latitude = 11.789818,
                            Longitude = 55.435381999999997,
                            StopNumber = "5985",
                            Zone = 0
                        },
                        new
                        {
                            ID = 14,
                            IsDeleted = false,
                            Label = "Birkevej (Søndre Parkvej)",
                            Latitude = 11.788266999999999,
                            Longitude = 55.433338999999997,
                            StopNumber = "4977",
                            Zone = 0
                        },
                        new
                        {
                            ID = 15,
                            IsDeleted = false,
                            Label = "Bøgevej (Søndre Parkvej)",
                            Latitude = 11.784288999999999,
                            Longitude = 55.431578000000002,
                            StopNumber = "4839",
                            Zone = 0
                        },
                        new
                        {
                            ID = 16,
                            IsDeleted = false,
                            Label = "Campusskolen (Ahorn Allé)",
                            Latitude = 11.783491,
                            Longitude = 55.429358000000001,
                            StopNumber = "4681",
                            Zone = 0
                        },
                        new
                        {
                            ID = 17,
                            IsDeleted = false,
                            Label = "ZBC Ringsted (Ahorn Allé)",
                            Latitude = 11.782598,
                            Longitude = 55.427204000000003,
                            StopNumber = "6601",
                            Zone = 0
                        },
                        new
                        {
                            ID = 18,
                            IsDeleted = false,
                            Label = "Abelsvej (Bengerds Allé)",
                            Latitude = 11.78209,
                            Longitude = 55.424128000000003,
                            StopNumber = "6570",
                            Zone = 0
                        },
                        new
                        {
                            ID = 19,
                            IsDeleted = false,
                            Label = "Campus (Bengerds Allé)",
                            Latitude = 11.783718,
                            Longitude = 55.423717000000003,
                            StopNumber = "7260",
                            Zone = 0
                        },
                        new
                        {
                            ID = 20,
                            IsDeleted = false,
                            Label = "Abelsvej (Bengerds Allé)",
                            Latitude = 11.782117,
                            Longitude = 55.424131000000003,
                            StopNumber = "4563",
                            Zone = 0
                        },
                        new
                        {
                            ID = 21,
                            IsDeleted = false,
                            Label = "ZBC Ringsted (Ahorn Allé) ",
                            Latitude = 11.782671000000001,
                            Longitude = 55.427320000000002,
                            StopNumber = "9790",
                            Zone = 0
                        },
                        new
                        {
                            ID = 22,
                            IsDeleted = false,
                            Label = "Campusskolen (Ahorn Allé) ",
                            Latitude = 11.783505999999999,
                            Longitude = 55.429372000000001,
                            StopNumber = "8093",
                            Zone = 0
                        },
                        new
                        {
                            ID = 23,
                            IsDeleted = false,
                            Label = "Bøgevej (Søndre Parkvej)",
                            Latitude = 11.784329,
                            Longitude = 55.431688999999999,
                            StopNumber = "9447",
                            Zone = 0
                        },
                        new
                        {
                            ID = 24,
                            IsDeleted = false,
                            Label = "Birkevej (Søndre Parkvej)",
                            Latitude = 11.788773000000001,
                            Longitude = 55.433591,
                            StopNumber = "6543",
                            Zone = 0
                        },
                        new
                        {
                            ID = 25,
                            IsDeleted = false,
                            Label = "Sdr. Parkvej (Søndervang)",
                            Latitude = 11.790101999999999,
                            Longitude = 55.435380000000002,
                            StopNumber = "9433",
                            Zone = 0
                        },
                        new
                        {
                            ID = 26,
                            IsDeleted = false,
                            Label = "Ringsted St.",
                            Latitude = 11.785740000000001,
                            Longitude = 55.438633000000003,
                            StopNumber = "1864",
                            Zone = 0
                        },
                        new
                        {
                            ID = 27,
                            IsDeleted = false,
                            Label = "Hovmarksvej (Sjællandsgade)",
                            Latitude = 11.78951,
                            Longitude = 55.441791000000002,
                            StopNumber = "3837",
                            Zone = 0
                        },
                        new
                        {
                            ID = 28,
                            IsDeleted = false,
                            Label = "Torvet",
                            Latitude = 11.789296999999999,
                            Longitude = 55.445372999999996,
                            StopNumber = "7250",
                            Zone = 0
                        },
                        new
                        {
                            ID = 29,
                            IsDeleted = false,
                            Label = "Ringsted Centret (Nørregade)",
                            Latitude = 11.788992,
                            Longitude = 55.446778000000002,
                            StopNumber = "5597",
                            Zone = 0
                        },
                        new
                        {
                            ID = 30,
                            IsDeleted = false,
                            Label = "Ringsted Sygehus (Nørregade)",
                            Latitude = 11.789178,
                            Longitude = 55.449683999999998,
                            StopNumber = "4205",
                            Zone = 0
                        },
                        new
                        {
                            ID = 31,
                            IsDeleted = false,
                            Label = "Ringstedet (Nordre Ringvej)",
                            Latitude = 11.790023,
                            Longitude = 55.452941000000003,
                            StopNumber = "2569",
                            Zone = 0
                        },
                        new
                        {
                            ID = 32,
                            IsDeleted = false,
                            Label = "Benløse Kro (Roskildevej)",
                            Latitude = 11.795324000000001,
                            Longitude = 55.458644999999997,
                            StopNumber = "5887",
                            Zone = 0
                        },
                        new
                        {
                            ID = 33,
                            IsDeleted = false,
                            Label = "Eilekiersvej (Roskildevej)",
                            Latitude = 11.797739,
                            Longitude = 55.459739999999996,
                            StopNumber = "6894",
                            Zone = 0
                        },
                        new
                        {
                            ID = 34,
                            IsDeleted = false,
                            Label = "Benløse Leragervej (Smålodsvej)",
                            Latitude = 11.803171000000001,
                            Longitude = 55.463380000000001,
                            StopNumber = "2663",
                            Zone = 0
                        },
                        new
                        {
                            ID = 35,
                            IsDeleted = false,
                            Label = "Byskovskolen, Asgård (Smålodsvej)",
                            Latitude = 11.800668999999999,
                            Longitude = 55.464838999999998,
                            StopNumber = "8291",
                            Zone = 0
                        },
                        new
                        {
                            ID = 36,
                            IsDeleted = false,
                            Label = "Benløse Byvej (Smålodsvej)",
                            Latitude = 11.798098,
                            Longitude = 55.466450999999999,
                            StopNumber = "8049",
                            Zone = 0
                        },
                        new
                        {
                            ID = 37,
                            IsDeleted = false,
                            Label = "Benløseparken Øst (Benløseparken)",
                            Latitude = 11.797974999999999,
                            Longitude = 55.466487999999998,
                            StopNumber = "3774",
                            Zone = 0
                        },
                        new
                        {
                            ID = 38,
                            IsDeleted = false,
                            Label = "Allerød St.",
                            Latitude = 12.35623,
                            Longitude = 55.871028000000003,
                            StopNumber = "4733",
                            Zone = 0
                        },
                        new
                        {
                            ID = 39,
                            IsDeleted = false,
                            Label = "Allerød Gymnasium (Rådhusvej)",
                            Latitude = 12.336021000000001,
                            Longitude = 55.866481999999998,
                            StopNumber = "5232",
                            Zone = 0
                        },
                        new
                        {
                            ID = 40,
                            IsDeleted = false,
                            Label = "Farum Midtpunkt (Frederiksborgvej)",
                            Latitude = 12.375425999999999,
                            Longitude = 55.819657999999997,
                            StopNumber = "6864",
                            Zone = 0
                        },
                        new
                        {
                            ID = 41,
                            IsDeleted = false,
                            Label = "Farum Bytorv (Frederiksborgvej)",
                            Latitude = 12.375888,
                            Longitude = 55.813478000000003,
                            StopNumber = "1852",
                            Zone = 0
                        },
                        new
                        {
                            ID = 42,
                            IsDeleted = false,
                            Label = "Bavnestedet (Fiskebækvej)",
                            Latitude = 12.374015999999999,
                            Longitude = 55.790146999999997,
                            StopNumber = "4981",
                            Zone = 0
                        },
                        new
                        {
                            ID = 43,
                            IsDeleted = false,
                            Label = "Værløse St., under broen (Fiskebækvej)",
                            Latitude = 12.369901,
                            Longitude = 55.782882999999998,
                            StopNumber = "9230",
                            Zone = 0
                        },
                        new
                        {
                            ID = 44,
                            IsDeleted = false,
                            Label = "Egebjerg Bygade (Egebjergvej)",
                            Latitude = 12.378091,
                            Longitude = 55.751409000000002,
                            StopNumber = "1979",
                            Zone = 0
                        },
                        new
                        {
                            ID = 45,
                            IsDeleted = false,
                            Label = "Agernhaven (Nordbuen)",
                            Latitude = 12.383271000000001,
                            Longitude = 55.748339999999999,
                            StopNumber = "6826",
                            Zone = 0
                        },
                        new
                        {
                            ID = 46,
                            IsDeleted = false,
                            Label = "Ring 4 (Klausdalsbrovej)",
                            Latitude = 12.389023999999999,
                            Longitude = 55.742930000000001,
                            StopNumber = "5971",
                            Zone = 0
                        },
                        new
                        {
                            ID = 47,
                            IsDeleted = false,
                            Label = "Lautrupbjerg (Lautrupparken)",
                            Latitude = 12.39181,
                            Longitude = 55.738190000000003,
                            StopNumber = "2925",
                            Zone = 0
                        },
                        new
                        {
                            ID = 48,
                            IsDeleted = false,
                            Label = "Lautruphøj (Lautrupparken)",
                            Latitude = 12.390323,
                            Longitude = 55.734479,
                            StopNumber = "3997",
                            Zone = 0
                        },
                        new
                        {
                            ID = 49,
                            IsDeleted = false,
                            Label = "Ballerup, Borupvang (Lautrupvang)",
                            Latitude = 12.388102999999999,
                            Longitude = 55.731493999999998,
                            StopNumber = "2350",
                            Zone = 0
                        },
                        new
                        {
                            ID = 50,
                            IsDeleted = false,
                            Label = "Malmparken St. (Malmparken)",
                            Latitude = 12.385842999999999,
                            Longitude = 55.724221,
                            StopNumber = "4409",
                            Zone = 0
                        },
                        new
                        {
                            ID = 51,
                            IsDeleted = false,
                            Label = "Ballerup, Borupvang (Lautrupvang)",
                            Latitude = 12.388489,
                            Longitude = 55.731686000000003,
                            StopNumber = "2810",
                            Zone = 0
                        },
                        new
                        {
                            ID = 52,
                            IsDeleted = false,
                            Label = "Lautruphøj (Lautrupparken)",
                            Latitude = 12.390688000000001,
                            Longitude = 55.734614999999998,
                            StopNumber = "4149",
                            Zone = 0
                        },
                        new
                        {
                            ID = 53,
                            IsDeleted = false,
                            Label = "Lautrupbjerg (Lautrupparken)",
                            Latitude = 12.3916,
                            Longitude = 55.738115999999998,
                            StopNumber = "5302",
                            Zone = 0
                        },
                        new
                        {
                            ID = 54,
                            IsDeleted = false,
                            Label = "Ring 4 (Nordbuen)",
                            Latitude = 12.387179,
                            Longitude = 55.743895999999999,
                            StopNumber = "4603",
                            Zone = 0
                        },
                        new
                        {
                            ID = 55,
                            IsDeleted = false,
                            Label = "Agernhaven (Nordbuen)",
                            Latitude = 12.383082999999999,
                            Longitude = 55.748660999999998,
                            StopNumber = "9106",
                            Zone = 0
                        },
                        new
                        {
                            ID = 56,
                            IsDeleted = false,
                            Label = "Egebjerg Bygade (Egebjergvej)",
                            Latitude = 12.378088,
                            Longitude = 55.751412000000002,
                            StopNumber = "7325",
                            Zone = 0
                        },
                        new
                        {
                            ID = 57,
                            IsDeleted = false,
                            Label = "Værløse St., under broen (Fiskebækvej)",
                            Latitude = 12.370144,
                            Longitude = 55.782913999999998,
                            StopNumber = "7139",
                            Zone = 0
                        },
                        new
                        {
                            ID = 58,
                            IsDeleted = false,
                            Label = "Bavnestedet (Fiskebækvej)",
                            Latitude = 12.373661999999999,
                            Longitude = 55.789603999999997,
                            StopNumber = "5360",
                            Zone = 0
                        },
                        new
                        {
                            ID = 59,
                            IsDeleted = false,
                            Label = "Farum Bytorv (Frederiksborgvej)",
                            Latitude = 12.375762,
                            Longitude = 55.813946999999999,
                            StopNumber = "2117",
                            Zone = 0
                        },
                        new
                        {
                            ID = 60,
                            IsDeleted = false,
                            Label = "Farum Midtpunkt (Frederiksborgvej)",
                            Latitude = 12.375667999999999,
                            Longitude = 55.81926,
                            StopNumber = "3716",
                            Zone = 0
                        },
                        new
                        {
                            ID = 61,
                            IsDeleted = false,
                            Label = "Allerød Gymnasium (Rådhusvej)",
                            Latitude = 12.335891999999999,
                            Longitude = 55.867185999999997,
                            StopNumber = "7362",
                            Zone = 0
                        },
                        new
                        {
                            ID = 62,
                            IsDeleted = false,
                            Label = "Allerød St.",
                            Latitude = 12.357018999999999,
                            Longitude = 55.871133,
                            StopNumber = "5402",
                            Zone = 0
                        },
                        new
                        {
                            ID = 63,
                            IsDeleted = false,
                            Label = "Søhuset (Bøge Allé)",
                            Latitude = 12.488821,
                            Longitude = 55.874419000000003,
                            StopNumber = "5557",
                            Zone = 0
                        },
                        new
                        {
                            ID = 64,
                            IsDeleted = false,
                            Label = "Forskerparken (Agern Allé)",
                            Latitude = 12.493067999999999,
                            Longitude = 55.870375000000003,
                            StopNumber = "2078",
                            Zone = 0
                        },
                        new
                        {
                            ID = 65,
                            IsDeleted = false,
                            Label = "Dr. Neergaards Vej (Hørsholm Kongevej)",
                            Latitude = 12.496853,
                            Longitude = 55.868622999999999,
                            StopNumber = "5482",
                            Zone = 0
                        },
                        new
                        {
                            ID = 66,
                            IsDeleted = false,
                            Label = "Ubberødvej (Hørsholm Kongevej)",
                            Latitude = 12.494365999999999,
                            Longitude = 55.860885000000003,
                            StopNumber = "3274",
                            Zone = 0
                        },
                        new
                        {
                            ID = 67,
                            IsDeleted = false,
                            Label = "Gl. Holte, Øverødvej (Helsingørmotorvejen)",
                            Latitude = 12.522701,
                            Longitude = 55.832183000000001,
                            StopNumber = "5712",
                            Zone = 0
                        },
                        new
                        {
                            ID = 68,
                            IsDeleted = false,
                            Label = "Nærum St. (Helsingørmotorvejen)",
                            Latitude = 12.528288,
                            Longitude = 55.814003,
                            StopNumber = "2189",
                            Zone = 0
                        },
                        new
                        {
                            ID = 69,
                            IsDeleted = false,
                            Label = "Rævehøjvej, DTU(Helsingørmotorvejen)",
                            Latitude = 12.528307,
                            Longitude = 55.787021000000003,
                            StopNumber = "8282",
                            Zone = 0
                        },
                        new
                        {
                            ID = 70,
                            IsDeleted = false,
                            Label = "Brogårdsvej (Lyngbyvej)",
                            Latitude = 12.523123999999999,
                            Longitude = 55.752217999999999,
                            StopNumber = "2178",
                            Zone = 0
                        },
                        new
                        {
                            ID = 71,
                            IsDeleted = false,
                            Label = "Ryparken St. (Lyngbyvej)",
                            Latitude = 12.558866999999999,
                            Longitude = 55.715463999999997,
                            StopNumber = "9110",
                            Zone = 0
                        },
                        new
                        {
                            ID = 72,
                            IsDeleted = false,
                            Label = "Haraldsgade (Lyngbyvej)",
                            Latitude = 12.561465999999999,
                            Longitude = 55.709420999999999,
                            StopNumber = "5885",
                            Zone = 0
                        },
                        new
                        {
                            ID = 73,
                            IsDeleted = false,
                            Label = "Vibenshus Runddel St. (Nørre Allé)",
                            Latitude = 12.562765000000001,
                            Longitude = 55.705649999999999,
                            StopNumber = "8948",
                            Zone = 0
                        },
                        new
                        {
                            ID = 74,
                            IsDeleted = false,
                            Label = "Universitetsparken (Nørre Allé)",
                            Latitude = 12.561970000000001,
                            Longitude = 55.699846000000001,
                            StopNumber = "8877",
                            Zone = 0
                        },
                        new
                        {
                            ID = 75,
                            IsDeleted = false,
                            Label = "Nørre Campus (Tagensvej)",
                            Latitude = 12.56165,
                            Longitude = 55.697166000000003,
                            StopNumber = "9784",
                            Zone = 0
                        },
                        new
                        {
                            ID = 76,
                            IsDeleted = false,
                            Label = "Rigshospitalet Syd (Fredensgade)",
                            Latitude = 12.565609,
                            Longitude = 55.694014000000003,
                            StopNumber = "3469",
                            Zone = 0
                        },
                        new
                        {
                            ID = 77,
                            IsDeleted = false,
                            Label = "Nørreport St. (Nørre Voldgade)",
                            Latitude = 12.572521999999999,
                            Longitude = 55.684201999999999,
                            StopNumber = "1700",
                            Zone = 0
                        },
                        new
                        {
                            ID = 78,
                            IsDeleted = false,
                            Label = "Nørreport St. (Nørre Voldgade)",
                            Latitude = 12.573342999999999,
                            Longitude = 55.684462000000003,
                            StopNumber = "8720",
                            Zone = 0
                        },
                        new
                        {
                            ID = 79,
                            IsDeleted = false,
                            Label = "Rigshospitalet Syd (Tagensvej)",
                            Latitude = 12.567138,
                            Longitude = 55.693283000000001,
                            StopNumber = "3125",
                            Zone = 0
                        },
                        new
                        {
                            ID = 80,
                            IsDeleted = false,
                            Label = "Nørre Campus (Nørre Allé)",
                            Latitude = 12.562493999999999,
                            Longitude = 55.696044999999998,
                            StopNumber = "6311",
                            Zone = 0
                        },
                        new
                        {
                            ID = 81,
                            IsDeleted = false,
                            Label = "Universitetsparken (Nørre Allé)",
                            Latitude = 12.56209,
                            Longitude = 55.700273000000003,
                            StopNumber = "2970",
                            Zone = 0
                        },
                        new
                        {
                            ID = 82,
                            IsDeleted = false,
                            Label = "Vibenshus Runddel St. (Lyngbyvej)",
                            Latitude = 12.562897,
                            Longitude = 55.706088999999999,
                            StopNumber = "4190",
                            Zone = 0
                        },
                        new
                        {
                            ID = 83,
                            IsDeleted = false,
                            Label = "Haraldsgade (Lyngbyvej)",
                            Latitude = 12.561144000000001,
                            Longitude = 55.709851,
                            StopNumber = "8271",
                            Zone = 0
                        },
                        new
                        {
                            ID = 84,
                            IsDeleted = false,
                            Label = "Ryparken St. (Lyngbyvej)",
                            Latitude = 12.558147999999999,
                            Longitude = 55.714987000000001,
                            StopNumber = "8987",
                            Zone = 0
                        },
                        new
                        {
                            ID = 85,
                            IsDeleted = false,
                            Label = "Brogårdsvej (Lyngbyvej)",
                            Latitude = 12.523312000000001,
                            Longitude = 55.752909000000002,
                            StopNumber = "3499",
                            Zone = 0
                        },
                        new
                        {
                            ID = 86,
                            IsDeleted = false,
                            Label = "Rævehøjvej, DTU (Helsingørmotorvejen)",
                            Latitude = 12.529572999999999,
                            Longitude = 55.788415000000001,
                            StopNumber = "3190",
                            Zone = 0
                        },
                        new
                        {
                            ID = 87,
                            IsDeleted = false,
                            Label = "Nærum St. (Helsingørmotorvejen)",
                            Latitude = 12.529267000000001,
                            Longitude = 55.814498999999998,
                            StopNumber = "5342",
                            Zone = 0
                        },
                        new
                        {
                            ID = 88,
                            IsDeleted = false,
                            Label = "Gl. Holte, Øverødvej (Helsingørmotorvejen)",
                            Latitude = 12.522786999999999,
                            Longitude = 55.833568999999997,
                            StopNumber = "4343",
                            Zone = 0
                        },
                        new
                        {
                            ID = 89,
                            IsDeleted = false,
                            Label = "Ubberødvej (Hørsholm Kongevej)",
                            Latitude = 12.494656000000001,
                            Longitude = 55.8613,
                            StopNumber = "4204",
                            Zone = 0
                        },
                        new
                        {
                            ID = 90,
                            IsDeleted = false,
                            Label = "Hørsholm Kongevej (Dr Neergaards Vej)",
                            Latitude = 12.498816,
                            Longitude = 55.868288,
                            StopNumber = "2567",
                            Zone = 0
                        },
                        new
                        {
                            ID = 91,
                            IsDeleted = false,
                            Label = "Forskerparken (Agern Allé)",
                            Latitude = 12.493052,
                            Longitude = 55.870477000000001,
                            StopNumber = "2465",
                            Zone = 0
                        },
                        new
                        {
                            ID = 92,
                            IsDeleted = false,
                            Label = "Søhuset (Bøge Allé)",
                            Latitude = 12.489032999999999,
                            Longitude = 55.873584999999999,
                            StopNumber = "8069",
                            Zone = 0
                        });
                });

            modelBuilder.Entity("WebApiNinjectStudio.Domain.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Soveværelse",
                            IsDeleted = false
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Badeværelse",
                            IsDeleted = false
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Kontor",
                            IsDeleted = false
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Stue",
                            IsDeleted = false
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryName = "Spisestue",
                            IsDeleted = false
                        },
                        new
                        {
                            CategoryId = 6,
                            CategoryName = "Opbevaring",
                            IsDeleted = false
                        },
                        new
                        {
                            CategoryId = 7,
                            CategoryName = "Have",
                            IsDeleted = false
                        },
                        new
                        {
                            CategoryId = 8,
                            CategoryName = "Indretning",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("WebApiNinjectStudio.Domain.Entities.NumberOfPassenger", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDT")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<int>("RouteBusID")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RouteBusID");

                    b.ToTable("NumberOfPassengers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreateDT = new DateTime(2020, 10, 27, 8, 48, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Latitude = 11.792655999999999,
                            Longitude = 55.464244999999998,
                            RouteBusID = 2,
                            Total = 8
                        },
                        new
                        {
                            ID = 2,
                            CreateDT = new DateTime(2020, 10, 27, 8, 58, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Latitude = 11.790853,
                            Longitude = 55.463222999999999,
                            RouteBusID = 2,
                            Total = 12
                        },
                        new
                        {
                            ID = 3,
                            CreateDT = new DateTime(2020, 10, 27, 9, 3, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Latitude = 11.790682,
                            Longitude = 55.461714999999998,
                            RouteBusID = 2,
                            Total = 19
                        },
                        new
                        {
                            ID = 4,
                            CreateDT = new DateTime(2020, 10, 27, 9, 11, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Latitude = 11.793170999999999,
                            Longitude = 55.459572999999999,
                            RouteBusID = 2,
                            Total = 27
                        },
                        new
                        {
                            ID = 5,
                            CreateDT = new DateTime(2020, 10, 27, 9, 19, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Latitude = 11.793428,
                            Longitude = 55.457773000000003,
                            RouteBusID = 2,
                            Total = 37
                        },
                        new
                        {
                            ID = 6,
                            CreateDT = new DateTime(2020, 10, 27, 9, 27, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Latitude = 11.786647,
                            Longitude = 55.450325999999997,
                            RouteBusID = 2,
                            Total = 44
                        },
                        new
                        {
                            ID = 7,
                            CreateDT = new DateTime(2020, 10, 27, 9, 34, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Latitude = 11.780639000000001,
                            Longitude = 55.447989999999997,
                            RouteBusID = 2,
                            Total = 56
                        },
                        new
                        {
                            ID = 8,
                            CreateDT = new DateTime(2020, 10, 27, 9, 42, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Latitude = 11.780639000000001,
                            Longitude = 55.442439999999998,
                            RouteBusID = 2,
                            Total = 61
                        },
                        new
                        {
                            ID = 9,
                            CreateDT = new DateTime(2020, 10, 27, 9, 51, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Latitude = 11.787162,
                            Longitude = 55.43835,
                            RouteBusID = 2,
                            Total = 67
                        },
                        new
                        {
                            ID = 10,
                            CreateDT = new DateTime(2020, 10, 27, 9, 59, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Latitude = 11.790596000000001,
                            Longitude = 55.434454000000002,
                            RouteBusID = 2,
                            Total = 58
                        });
                });

            modelBuilder.Entity("WebApiNinjectStudio.Domain.Entities.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductID = 1,
                            Description = "Bremsehjul, Højdejusterbar, Nylonbase, Trinløs vippefunktion",
                            IsDeleted = false,
                            Name = "Kontorstol REGSTRUP sort/grå",
                            Price = 300m
                        },
                        new
                        {
                            ProductID = 2,
                            Description = "Højdejusterbar",
                            IsDeleted = false,
                            Name = "Barstol KLARUP sort/krom",
                            Price = 250m
                        });
                });

            modelBuilder.Entity("WebApiNinjectStudio.Domain.Entities.ProductCategory", b =>
                {
                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("ProductID", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            ProductID = 1,
                            CategoryId = 3,
                            IsDeleted = false
                        },
                        new
                        {
                            ProductID = 1,
                            CategoryId = 5,
                            IsDeleted = false
                        },
                        new
                        {
                            ProductID = 2,
                            CategoryId = 5,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("WebApiNinjectStudio.Domain.Entities.ProductImage", b =>
                {
                    b.Property<int>("ProductImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductImageId");

                    b.HasIndex("ProductID")
                        .IsUnique();

                    b.ToTable("ProductImages");

                    b.HasData(
                        new
                        {
                            ProductImageId = 1,
                            IsDeleted = false,
                            ProductID = 1,
                            Url = "jysk.dk/kontor/kontorstole/basic/kontorstol-regstrup-sort-graa"
                        },
                        new
                        {
                            ProductImageId = 2,
                            IsDeleted = false,
                            ProductID = 2,
                            Url = "jysk.dk/spisestue/barborde-stole/barstol-klarup-sort-krom-0"
                        });
                });

            modelBuilder.Entity("WebApiNinjectStudio.Domain.Entities.ProductTag", b =>
                {
                    b.Property<int>("ProductTagID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.HasKey("ProductTagID");

                    b.HasIndex("ProductID");

                    b.ToTable("ProductTags");

                    b.HasData(
                        new
                        {
                            ProductTagID = 1,
                            IsDeleted = false,
                            Name = "kontorstol",
                            ProductID = 1
                        },
                        new
                        {
                            ProductTagID = 2,
                            IsDeleted = false,
                            Name = "sort",
                            ProductID = 1
                        },
                        new
                        {
                            ProductTagID = 3,
                            IsDeleted = false,
                            Name = "skum",
                            ProductID = 1
                        },
                        new
                        {
                            ProductTagID = 4,
                            IsDeleted = false,
                            Name = "metal",
                            ProductID = 1
                        },
                        new
                        {
                            ProductTagID = 5,
                            IsDeleted = false,
                            Name = "krydsfiner",
                            ProductID = 1
                        },
                        new
                        {
                            ProductTagID = 6,
                            IsDeleted = false,
                            Name = "kunstlæder",
                            ProductID = 2
                        },
                        new
                        {
                            ProductTagID = 7,
                            IsDeleted = false,
                            Name = "skum",
                            ProductID = 2
                        },
                        new
                        {
                            ProductTagID = 8,
                            IsDeleted = false,
                            Name = "metal",
                            ProductID = 2
                        },
                        new
                        {
                            ProductTagID = 9,
                            IsDeleted = false,
                            Name = "polypropylen",
                            ProductID = 2
                        });
                });

            modelBuilder.Entity("WebApiNinjectStudio.Domain.Entities.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleID = 1,
                            IsDeleted = false,
                            Name = "Administrator"
                        },
                        new
                        {
                            RoleID = 2,
                            IsDeleted = false,
                            Name = "Guest"
                        });
                });

            modelBuilder.Entity("WebApiNinjectStudio.Domain.Entities.RolePermissionApiUrl", b =>
                {
                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<int>("ApiUrlID")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("RoleID", "ApiUrlID");

                    b.HasIndex("ApiUrlID");

                    b.ToTable("RolePermissionApiUrls");

                    b.HasData(
                        new
                        {
                            RoleID = 1,
                            ApiUrlID = 1,
                            IsDeleted = false
                        },
                        new
                        {
                            RoleID = 1,
                            ApiUrlID = 2,
                            IsDeleted = false
                        },
                        new
                        {
                            RoleID = 1,
                            ApiUrlID = 3,
                            IsDeleted = false
                        },
                        new
                        {
                            RoleID = 1,
                            ApiUrlID = 4,
                            IsDeleted = false
                        },
                        new
                        {
                            RoleID = 1,
                            ApiUrlID = 5,
                            IsDeleted = false
                        },
                        new
                        {
                            RoleID = 1,
                            ApiUrlID = 6,
                            IsDeleted = false
                        },
                        new
                        {
                            RoleID = 1,
                            ApiUrlID = 7,
                            IsDeleted = false
                        },
                        new
                        {
                            RoleID = 1,
                            ApiUrlID = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            RoleID = 1,
                            ApiUrlID = 9,
                            IsDeleted = false
                        },
                        new
                        {
                            RoleID = 1,
                            ApiUrlID = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            RoleID = 1,
                            ApiUrlID = 11,
                            IsDeleted = false
                        },
                        new
                        {
                            RoleID = 1,
                            ApiUrlID = 12,
                            IsDeleted = false
                        },
                        new
                        {
                            RoleID = 1,
                            ApiUrlID = 13,
                            IsDeleted = false
                        },
                        new
                        {
                            RoleID = 1,
                            ApiUrlID = 14,
                            IsDeleted = false
                        },
                        new
                        {
                            RoleID = 1,
                            ApiUrlID = 15,
                            IsDeleted = false
                        },
                        new
                        {
                            RoleID = 1,
                            ApiUrlID = 16,
                            IsDeleted = false
                        },
                        new
                        {
                            RoleID = 1,
                            ApiUrlID = 17,
                            IsDeleted = false
                        },
                        new
                        {
                            RoleID = 1,
                            ApiUrlID = 18,
                            IsDeleted = false
                        },
                        new
                        {
                            RoleID = 1,
                            ApiUrlID = 19,
                            IsDeleted = false
                        },
                        new
                        {
                            RoleID = 2,
                            ApiUrlID = 3,
                            IsDeleted = false
                        },
                        new
                        {
                            RoleID = 2,
                            ApiUrlID = 4,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("WebApiNinjectStudio.Domain.Entities.Route", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Routes");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "Mod Campus (Bengerds Allé)",
                            IsDeleted = false,
                            Label = "401A"
                        },
                        new
                        {
                            ID = 2,
                            Description = "Mod Benløseparken Øst (Benløseparken)",
                            IsDeleted = false,
                            Label = "401A"
                        },
                        new
                        {
                            ID = 3,
                            Description = "Mod Malmparken St.",
                            IsDeleted = false,
                            Label = "55E"
                        },
                        new
                        {
                            ID = 4,
                            Description = "Mod Allerød St.",
                            IsDeleted = false,
                            Label = "55E"
                        },
                        new
                        {
                            ID = 5,
                            Description = "Mod Nørreport St.",
                            IsDeleted = false,
                            Label = "15E"
                        },
                        new
                        {
                            ID = 6,
                            Description = "Mod Søhuset, Forskerparken",
                            IsDeleted = false,
                            Label = "15E"
                        });
                });

            modelBuilder.Entity("WebApiNinjectStudio.Domain.Entities.RouteBus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BusDriverID")
                        .HasColumnType("int");

                    b.Property<int>("BusID")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<int>("RouteID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BusDriverID");

                    b.HasIndex("BusID");

                    b.HasIndex("RouteID");

                    b.ToTable("RouteBusses");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            BusDriverID = 12,
                            BusID = 1,
                            IsDeleted = false,
                            Latitude = 11.795572,
                            Longitude = 55.465448000000002,
                            RouteID = 1,
                            Status = 1
                        },
                        new
                        {
                            ID = 2,
                            BusDriverID = 11,
                            BusID = 2,
                            IsDeleted = false,
                            Latitude = 11.783491,
                            Longitude = 55.429358000000001,
                            RouteID = 1,
                            Status = 1
                        },
                        new
                        {
                            ID = 3,
                            BusDriverID = 10,
                            BusID = 3,
                            IsDeleted = false,
                            Latitude = 11.783718,
                            Longitude = 55.423717000000003,
                            RouteID = 2,
                            Status = 1
                        },
                        new
                        {
                            ID = 4,
                            BusDriverID = 9,
                            BusID = 4,
                            IsDeleted = false,
                            Latitude = 11.800668999999999,
                            Longitude = 55.464838999999998,
                            RouteID = 2,
                            Status = 1
                        },
                        new
                        {
                            ID = 5,
                            BusDriverID = 8,
                            BusID = 5,
                            IsDeleted = false,
                            Latitude = 12.35623,
                            Longitude = 55.871028000000003,
                            RouteID = 3,
                            Status = 1
                        },
                        new
                        {
                            ID = 6,
                            BusDriverID = 7,
                            BusID = 6,
                            IsDeleted = false,
                            Latitude = 12.389023999999999,
                            Longitude = 55.742930000000001,
                            RouteID = 3,
                            Status = 1
                        },
                        new
                        {
                            ID = 7,
                            BusDriverID = 6,
                            BusID = 7,
                            IsDeleted = false,
                            Latitude = 12.385842999999999,
                            Longitude = 55.724221,
                            RouteID = 4,
                            Status = 1
                        },
                        new
                        {
                            ID = 8,
                            BusDriverID = 5,
                            BusID = 8,
                            IsDeleted = false,
                            Latitude = 12.383082999999999,
                            Longitude = 55.748660999999998,
                            RouteID = 4,
                            Status = 1
                        },
                        new
                        {
                            ID = 9,
                            BusDriverID = 4,
                            BusID = 9,
                            IsDeleted = false,
                            Latitude = 12.488821,
                            Longitude = 55.874419000000003,
                            RouteID = 5,
                            Status = 1
                        },
                        new
                        {
                            ID = 10,
                            BusDriverID = 3,
                            BusID = 10,
                            IsDeleted = false,
                            Latitude = 12.523123999999999,
                            Longitude = 55.752217999999999,
                            RouteID = 5,
                            Status = 1
                        },
                        new
                        {
                            ID = 11,
                            BusDriverID = 2,
                            BusID = 11,
                            IsDeleted = false,
                            Latitude = 12.573342999999999,
                            Longitude = 55.684462000000003,
                            RouteID = 6,
                            Status = 1
                        },
                        new
                        {
                            ID = 12,
                            BusDriverID = 1,
                            BusID = 12,
                            IsDeleted = false,
                            Latitude = 12.558147999999999,
                            Longitude = 55.714987000000001,
                            RouteID = 6,
                            Status = 1
                        });
                });

            modelBuilder.Entity("WebApiNinjectStudio.Domain.Entities.RouteBusStop", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BusStopID")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("RouteID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BusStopID");

                    b.HasIndex("RouteID");

                    b.ToTable("RouteBusStops");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            BusStopID = 63,
                            IsDeleted = false,
                            Order = 1,
                            RouteID = 5
                        },
                        new
                        {
                            ID = 2,
                            BusStopID = 64,
                            IsDeleted = false,
                            Order = 2,
                            RouteID = 5
                        },
                        new
                        {
                            ID = 3,
                            BusStopID = 65,
                            IsDeleted = false,
                            Order = 3,
                            RouteID = 5
                        },
                        new
                        {
                            ID = 4,
                            BusStopID = 66,
                            IsDeleted = false,
                            Order = 4,
                            RouteID = 5
                        },
                        new
                        {
                            ID = 5,
                            BusStopID = 67,
                            IsDeleted = false,
                            Order = 5,
                            RouteID = 5
                        },
                        new
                        {
                            ID = 6,
                            BusStopID = 68,
                            IsDeleted = false,
                            Order = 6,
                            RouteID = 5
                        },
                        new
                        {
                            ID = 7,
                            BusStopID = 69,
                            IsDeleted = false,
                            Order = 7,
                            RouteID = 5
                        },
                        new
                        {
                            ID = 8,
                            BusStopID = 70,
                            IsDeleted = false,
                            Order = 8,
                            RouteID = 5
                        },
                        new
                        {
                            ID = 9,
                            BusStopID = 71,
                            IsDeleted = false,
                            Order = 9,
                            RouteID = 5
                        },
                        new
                        {
                            ID = 10,
                            BusStopID = 72,
                            IsDeleted = false,
                            Order = 10,
                            RouteID = 5
                        },
                        new
                        {
                            ID = 11,
                            BusStopID = 73,
                            IsDeleted = false,
                            Order = 11,
                            RouteID = 5
                        },
                        new
                        {
                            ID = 12,
                            BusStopID = 74,
                            IsDeleted = false,
                            Order = 12,
                            RouteID = 5
                        },
                        new
                        {
                            ID = 13,
                            BusStopID = 75,
                            IsDeleted = false,
                            Order = 13,
                            RouteID = 5
                        },
                        new
                        {
                            ID = 14,
                            BusStopID = 76,
                            IsDeleted = false,
                            Order = 14,
                            RouteID = 5
                        },
                        new
                        {
                            ID = 15,
                            BusStopID = 77,
                            IsDeleted = false,
                            Order = 15,
                            RouteID = 5
                        },
                        new
                        {
                            ID = 16,
                            BusStopID = 78,
                            IsDeleted = false,
                            Order = 1,
                            RouteID = 6
                        },
                        new
                        {
                            ID = 17,
                            BusStopID = 79,
                            IsDeleted = false,
                            Order = 2,
                            RouteID = 6
                        },
                        new
                        {
                            ID = 18,
                            BusStopID = 80,
                            IsDeleted = false,
                            Order = 3,
                            RouteID = 6
                        },
                        new
                        {
                            ID = 19,
                            BusStopID = 81,
                            IsDeleted = false,
                            Order = 4,
                            RouteID = 6
                        },
                        new
                        {
                            ID = 20,
                            BusStopID = 82,
                            IsDeleted = false,
                            Order = 5,
                            RouteID = 6
                        },
                        new
                        {
                            ID = 21,
                            BusStopID = 83,
                            IsDeleted = false,
                            Order = 6,
                            RouteID = 6
                        },
                        new
                        {
                            ID = 22,
                            BusStopID = 84,
                            IsDeleted = false,
                            Order = 7,
                            RouteID = 6
                        },
                        new
                        {
                            ID = 23,
                            BusStopID = 85,
                            IsDeleted = false,
                            Order = 8,
                            RouteID = 6
                        },
                        new
                        {
                            ID = 24,
                            BusStopID = 86,
                            IsDeleted = false,
                            Order = 9,
                            RouteID = 6
                        },
                        new
                        {
                            ID = 25,
                            BusStopID = 87,
                            IsDeleted = false,
                            Order = 10,
                            RouteID = 6
                        },
                        new
                        {
                            ID = 26,
                            BusStopID = 88,
                            IsDeleted = false,
                            Order = 11,
                            RouteID = 6
                        },
                        new
                        {
                            ID = 27,
                            BusStopID = 89,
                            IsDeleted = false,
                            Order = 12,
                            RouteID = 6
                        },
                        new
                        {
                            ID = 28,
                            BusStopID = 90,
                            IsDeleted = false,
                            Order = 13,
                            RouteID = 6
                        },
                        new
                        {
                            ID = 29,
                            BusStopID = 91,
                            IsDeleted = false,
                            Order = 14,
                            RouteID = 6
                        },
                        new
                        {
                            ID = 30,
                            BusStopID = 92,
                            IsDeleted = false,
                            Order = 15,
                            RouteID = 6
                        },
                        new
                        {
                            ID = 31,
                            BusStopID = 1,
                            IsDeleted = false,
                            Order = 1,
                            RouteID = 1
                        },
                        new
                        {
                            ID = 32,
                            BusStopID = 2,
                            IsDeleted = false,
                            Order = 2,
                            RouteID = 1
                        },
                        new
                        {
                            ID = 33,
                            BusStopID = 3,
                            IsDeleted = false,
                            Order = 3,
                            RouteID = 1
                        },
                        new
                        {
                            ID = 34,
                            BusStopID = 4,
                            IsDeleted = false,
                            Order = 4,
                            RouteID = 1
                        },
                        new
                        {
                            ID = 35,
                            BusStopID = 5,
                            IsDeleted = false,
                            Order = 5,
                            RouteID = 1
                        },
                        new
                        {
                            ID = 36,
                            BusStopID = 6,
                            IsDeleted = false,
                            Order = 6,
                            RouteID = 1
                        },
                        new
                        {
                            ID = 37,
                            BusStopID = 7,
                            IsDeleted = false,
                            Order = 7,
                            RouteID = 1
                        },
                        new
                        {
                            ID = 38,
                            BusStopID = 8,
                            IsDeleted = false,
                            Order = 8,
                            RouteID = 1
                        },
                        new
                        {
                            ID = 39,
                            BusStopID = 9,
                            IsDeleted = false,
                            Order = 9,
                            RouteID = 1
                        },
                        new
                        {
                            ID = 40,
                            BusStopID = 10,
                            IsDeleted = false,
                            Order = 10,
                            RouteID = 1
                        },
                        new
                        {
                            ID = 41,
                            BusStopID = 11,
                            IsDeleted = false,
                            Order = 11,
                            RouteID = 1
                        },
                        new
                        {
                            ID = 42,
                            BusStopID = 12,
                            IsDeleted = false,
                            Order = 12,
                            RouteID = 1
                        },
                        new
                        {
                            ID = 43,
                            BusStopID = 13,
                            IsDeleted = false,
                            Order = 13,
                            RouteID = 1
                        },
                        new
                        {
                            ID = 44,
                            BusStopID = 14,
                            IsDeleted = false,
                            Order = 14,
                            RouteID = 1
                        },
                        new
                        {
                            ID = 45,
                            BusStopID = 15,
                            IsDeleted = false,
                            Order = 15,
                            RouteID = 1
                        },
                        new
                        {
                            ID = 46,
                            BusStopID = 16,
                            IsDeleted = false,
                            Order = 16,
                            RouteID = 1
                        },
                        new
                        {
                            ID = 47,
                            BusStopID = 17,
                            IsDeleted = false,
                            Order = 17,
                            RouteID = 1
                        },
                        new
                        {
                            ID = 48,
                            BusStopID = 18,
                            IsDeleted = false,
                            Order = 18,
                            RouteID = 1
                        },
                        new
                        {
                            ID = 49,
                            BusStopID = 19,
                            IsDeleted = false,
                            Order = 19,
                            RouteID = 1
                        },
                        new
                        {
                            ID = 50,
                            BusStopID = 19,
                            IsDeleted = false,
                            Order = 1,
                            RouteID = 2
                        },
                        new
                        {
                            ID = 51,
                            BusStopID = 20,
                            IsDeleted = false,
                            Order = 2,
                            RouteID = 2
                        },
                        new
                        {
                            ID = 52,
                            BusStopID = 21,
                            IsDeleted = false,
                            Order = 3,
                            RouteID = 2
                        },
                        new
                        {
                            ID = 53,
                            BusStopID = 22,
                            IsDeleted = false,
                            Order = 4,
                            RouteID = 2
                        },
                        new
                        {
                            ID = 54,
                            BusStopID = 23,
                            IsDeleted = false,
                            Order = 5,
                            RouteID = 2
                        },
                        new
                        {
                            ID = 55,
                            BusStopID = 24,
                            IsDeleted = false,
                            Order = 6,
                            RouteID = 2
                        },
                        new
                        {
                            ID = 56,
                            BusStopID = 25,
                            IsDeleted = false,
                            Order = 7,
                            RouteID = 2
                        },
                        new
                        {
                            ID = 57,
                            BusStopID = 26,
                            IsDeleted = false,
                            Order = 8,
                            RouteID = 2
                        },
                        new
                        {
                            ID = 58,
                            BusStopID = 27,
                            IsDeleted = false,
                            Order = 9,
                            RouteID = 2
                        },
                        new
                        {
                            ID = 59,
                            BusStopID = 28,
                            IsDeleted = false,
                            Order = 10,
                            RouteID = 2
                        },
                        new
                        {
                            ID = 60,
                            BusStopID = 29,
                            IsDeleted = false,
                            Order = 11,
                            RouteID = 2
                        },
                        new
                        {
                            ID = 61,
                            BusStopID = 30,
                            IsDeleted = false,
                            Order = 12,
                            RouteID = 2
                        },
                        new
                        {
                            ID = 62,
                            BusStopID = 31,
                            IsDeleted = false,
                            Order = 13,
                            RouteID = 2
                        },
                        new
                        {
                            ID = 63,
                            BusStopID = 32,
                            IsDeleted = false,
                            Order = 14,
                            RouteID = 2
                        },
                        new
                        {
                            ID = 64,
                            BusStopID = 33,
                            IsDeleted = false,
                            Order = 15,
                            RouteID = 2
                        },
                        new
                        {
                            ID = 65,
                            BusStopID = 34,
                            IsDeleted = false,
                            Order = 16,
                            RouteID = 2
                        },
                        new
                        {
                            ID = 66,
                            BusStopID = 35,
                            IsDeleted = false,
                            Order = 17,
                            RouteID = 2
                        },
                        new
                        {
                            ID = 67,
                            BusStopID = 36,
                            IsDeleted = false,
                            Order = 18,
                            RouteID = 2
                        },
                        new
                        {
                            ID = 68,
                            BusStopID = 37,
                            IsDeleted = false,
                            Order = 19,
                            RouteID = 2
                        },
                        new
                        {
                            ID = 69,
                            BusStopID = 38,
                            IsDeleted = false,
                            Order = 1,
                            RouteID = 3
                        },
                        new
                        {
                            ID = 70,
                            BusStopID = 39,
                            IsDeleted = false,
                            Order = 2,
                            RouteID = 3
                        },
                        new
                        {
                            ID = 71,
                            BusStopID = 40,
                            IsDeleted = false,
                            Order = 3,
                            RouteID = 3
                        },
                        new
                        {
                            ID = 72,
                            BusStopID = 41,
                            IsDeleted = false,
                            Order = 4,
                            RouteID = 3
                        },
                        new
                        {
                            ID = 73,
                            BusStopID = 42,
                            IsDeleted = false,
                            Order = 5,
                            RouteID = 3
                        },
                        new
                        {
                            ID = 74,
                            BusStopID = 43,
                            IsDeleted = false,
                            Order = 6,
                            RouteID = 3
                        },
                        new
                        {
                            ID = 75,
                            BusStopID = 44,
                            IsDeleted = false,
                            Order = 7,
                            RouteID = 3
                        },
                        new
                        {
                            ID = 76,
                            BusStopID = 45,
                            IsDeleted = false,
                            Order = 8,
                            RouteID = 3
                        },
                        new
                        {
                            ID = 77,
                            BusStopID = 46,
                            IsDeleted = false,
                            Order = 9,
                            RouteID = 3
                        },
                        new
                        {
                            ID = 78,
                            BusStopID = 47,
                            IsDeleted = false,
                            Order = 10,
                            RouteID = 3
                        },
                        new
                        {
                            ID = 79,
                            BusStopID = 48,
                            IsDeleted = false,
                            Order = 11,
                            RouteID = 3
                        },
                        new
                        {
                            ID = 80,
                            BusStopID = 49,
                            IsDeleted = false,
                            Order = 12,
                            RouteID = 3
                        },
                        new
                        {
                            ID = 81,
                            BusStopID = 50,
                            IsDeleted = false,
                            Order = 13,
                            RouteID = 3
                        },
                        new
                        {
                            ID = 82,
                            BusStopID = 50,
                            IsDeleted = false,
                            Order = 1,
                            RouteID = 4
                        },
                        new
                        {
                            ID = 83,
                            BusStopID = 51,
                            IsDeleted = false,
                            Order = 2,
                            RouteID = 4
                        },
                        new
                        {
                            ID = 84,
                            BusStopID = 52,
                            IsDeleted = false,
                            Order = 3,
                            RouteID = 4
                        },
                        new
                        {
                            ID = 85,
                            BusStopID = 53,
                            IsDeleted = false,
                            Order = 4,
                            RouteID = 4
                        },
                        new
                        {
                            ID = 86,
                            BusStopID = 54,
                            IsDeleted = false,
                            Order = 5,
                            RouteID = 4
                        },
                        new
                        {
                            ID = 87,
                            BusStopID = 55,
                            IsDeleted = false,
                            Order = 6,
                            RouteID = 4
                        },
                        new
                        {
                            ID = 88,
                            BusStopID = 56,
                            IsDeleted = false,
                            Order = 7,
                            RouteID = 4
                        },
                        new
                        {
                            ID = 89,
                            BusStopID = 57,
                            IsDeleted = false,
                            Order = 8,
                            RouteID = 4
                        },
                        new
                        {
                            ID = 90,
                            BusStopID = 58,
                            IsDeleted = false,
                            Order = 9,
                            RouteID = 4
                        },
                        new
                        {
                            ID = 91,
                            BusStopID = 59,
                            IsDeleted = false,
                            Order = 10,
                            RouteID = 4
                        },
                        new
                        {
                            ID = 92,
                            BusStopID = 60,
                            IsDeleted = false,
                            Order = 11,
                            RouteID = 4
                        },
                        new
                        {
                            ID = 93,
                            BusStopID = 61,
                            IsDeleted = false,
                            Order = 12,
                            RouteID = 4
                        },
                        new
                        {
                            ID = 94,
                            BusStopID = 62,
                            IsDeleted = false,
                            Order = 13,
                            RouteID = 4
                        });
                });

            modelBuilder.Entity("WebApiNinjectStudio.Domain.Entities.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.HasKey("UserID");

                    b.HasIndex("RoleID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            Email = "one@gmail.com",
                            FirstName = "Kim",
                            IsDeleted = false,
                            LastName = "Nielsen",
                            Password = "M4jZrsPV2wNAeOH1YooKUdALx6Ek0DJaMf8yoiYI0Mc=",
                            RoleID = 1
                        },
                        new
                        {
                            UserID = 2,
                            Email = "two@gmail.com",
                            FirstName = "Martin",
                            IsDeleted = false,
                            LastName = "Jensen",
                            Password = "FOHqRDbYuVdIBvLS6r2YMVU4Yu7E54DJJJxrWGh5YZc=",
                            RoleID = 2
                        });
                });

            modelBuilder.Entity("WebApiNinjectStudio.Domain.Entities.UserDetail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("UserDetails");
                });

            modelBuilder.Entity("WebApiNinjectStudio.Domain.Entities.Bus", b =>
                {
                    b.HasOne("WebApiNinjectStudio.Domain.Entities.BusModel", "BusModel")
                        .WithMany("Bus")
                        .HasForeignKey("BusModelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApiNinjectStudio.Domain.Entities.NumberOfPassenger", b =>
                {
                    b.HasOne("WebApiNinjectStudio.Domain.Entities.RouteBus", "RouteBus")
                        .WithMany("NumberOfPassengers")
                        .HasForeignKey("RouteBusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApiNinjectStudio.Domain.Entities.ProductCategory", b =>
                {
                    b.HasOne("WebApiNinjectStudio.Domain.Entities.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiNinjectStudio.Domain.Entities.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApiNinjectStudio.Domain.Entities.ProductImage", b =>
                {
                    b.HasOne("WebApiNinjectStudio.Domain.Entities.Product", "Product")
                        .WithOne("ProductImage")
                        .HasForeignKey("WebApiNinjectStudio.Domain.Entities.ProductImage", "ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApiNinjectStudio.Domain.Entities.ProductTag", b =>
                {
                    b.HasOne("WebApiNinjectStudio.Domain.Entities.Product", "Product")
                        .WithMany("ProductTag")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApiNinjectStudio.Domain.Entities.RolePermissionApiUrl", b =>
                {
                    b.HasOne("WebApiNinjectStudio.Domain.Entities.ApiUrl", "ApiUrl")
                        .WithMany("RolePermissionApiUrls")
                        .HasForeignKey("ApiUrlID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiNinjectStudio.Domain.Entities.Role", "Role")
                        .WithMany("RolePermissionApiUrls")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApiNinjectStudio.Domain.Entities.RouteBus", b =>
                {
                    b.HasOne("WebApiNinjectStudio.Domain.Entities.BusDriver", "BusDriver")
                        .WithMany("RouteBusses")
                        .HasForeignKey("BusDriverID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiNinjectStudio.Domain.Entities.Bus", "Bus")
                        .WithMany("RouteBusses")
                        .HasForeignKey("BusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiNinjectStudio.Domain.Entities.Route", "Route")
                        .WithMany("RouteBusses")
                        .HasForeignKey("RouteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApiNinjectStudio.Domain.Entities.RouteBusStop", b =>
                {
                    b.HasOne("WebApiNinjectStudio.Domain.Entities.BusStop", "BusStop")
                        .WithMany("RouteBusStops")
                        .HasForeignKey("BusStopID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiNinjectStudio.Domain.Entities.Route", "Route")
                        .WithMany("RouteBusStops")
                        .HasForeignKey("RouteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApiNinjectStudio.Domain.Entities.User", b =>
                {
                    b.HasOne("WebApiNinjectStudio.Domain.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
